// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pkg/proto/model/build/build.proto

package build

import (
	encoding "github.com/buildbarn/bonanza/pkg/proto/model/encoding"
	filesystem "github.com/buildbarn/bonanza/pkg/proto/model/filesystem"
	object "github.com/buildbarn/bonanza/pkg/proto/storage/object"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Module struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	Name                   string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RootDirectoryReference *filesystem.DirectoryReference `protobuf:"bytes,2,opt,name=root_directory_reference,json=rootDirectoryReference,proto3" json:"root_directory_reference,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Module) Reset() {
	*x = Module{}
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_build_build_proto_rawDescGZIP(), []int{0}
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetRootDirectoryReference() *filesystem.DirectoryReference {
	if x != nil {
		return x.RootDirectoryReference
	}
	return nil
}

type UseLockfile struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Error                bool                   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	MaximumCacheDuration *durationpb.Duration   `protobuf:"bytes,2,opt,name=maximum_cache_duration,json=maximumCacheDuration,proto3" json:"maximum_cache_duration,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UseLockfile) Reset() {
	*x = UseLockfile{}
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseLockfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseLockfile) ProtoMessage() {}

func (x *UseLockfile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseLockfile.ProtoReflect.Descriptor instead.
func (*UseLockfile) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_build_build_proto_rawDescGZIP(), []int{1}
}

func (x *UseLockfile) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *UseLockfile) GetMaximumCacheDuration() *durationpb.Duration {
	if x != nil {
		return x.MaximumCacheDuration
	}
	return nil
}

type BuildSpecification struct {
	state                           protoimpl.MessageState                  `protogen:"open.v1"`
	Modules                         []*Module                               `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	RootModuleName                  string                                  `protobuf:"bytes,2,opt,name=root_module_name,json=rootModuleName,proto3" json:"root_module_name,omitempty"`
	TargetPatterns                  []string                                `protobuf:"bytes,3,rep,name=target_patterns,json=targetPatterns,proto3" json:"target_patterns,omitempty"`
	DirectoryCreationParameters     *filesystem.DirectoryCreationParameters `protobuf:"bytes,4,opt,name=directory_creation_parameters,json=directoryCreationParameters,proto3" json:"directory_creation_parameters,omitempty"`
	FileCreationParameters          *filesystem.FileCreationParameters      `protobuf:"bytes,5,opt,name=file_creation_parameters,json=fileCreationParameters,proto3" json:"file_creation_parameters,omitempty"`
	UseLockfile                     *UseLockfile                            `protobuf:"bytes,6,opt,name=use_lockfile,json=useLockfile,proto3" json:"use_lockfile,omitempty"`
	ModuleRegistryUrls              []string                                `protobuf:"bytes,7,rep,name=module_registry_urls,json=moduleRegistryUrls,proto3" json:"module_registry_urls,omitempty"`
	IgnoreRootModuleDevDependencies bool                                    `protobuf:"varint,8,opt,name=ignore_root_module_dev_dependencies,json=ignoreRootModuleDevDependencies,proto3" json:"ignore_root_module_dev_dependencies,omitempty"`
	BuiltinsModuleNames             []string                                `protobuf:"bytes,9,rep,name=builtins_module_names,json=builtinsModuleNames,proto3" json:"builtins_module_names,omitempty"`
	RepoPlatform                    string                                  `protobuf:"bytes,10,opt,name=repo_platform,json=repoPlatform,proto3" json:"repo_platform,omitempty"`
	CommandEncoders                 []*encoding.BinaryEncoder               `protobuf:"bytes,11,rep,name=command_encoders,json=commandEncoders,proto3" json:"command_encoders,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *BuildSpecification) Reset() {
	*x = BuildSpecification{}
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSpecification) ProtoMessage() {}

func (x *BuildSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSpecification.ProtoReflect.Descriptor instead.
func (*BuildSpecification) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_build_build_proto_rawDescGZIP(), []int{2}
}

func (x *BuildSpecification) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *BuildSpecification) GetRootModuleName() string {
	if x != nil {
		return x.RootModuleName
	}
	return ""
}

func (x *BuildSpecification) GetTargetPatterns() []string {
	if x != nil {
		return x.TargetPatterns
	}
	return nil
}

func (x *BuildSpecification) GetDirectoryCreationParameters() *filesystem.DirectoryCreationParameters {
	if x != nil {
		return x.DirectoryCreationParameters
	}
	return nil
}

func (x *BuildSpecification) GetFileCreationParameters() *filesystem.FileCreationParameters {
	if x != nil {
		return x.FileCreationParameters
	}
	return nil
}

func (x *BuildSpecification) GetUseLockfile() *UseLockfile {
	if x != nil {
		return x.UseLockfile
	}
	return nil
}

func (x *BuildSpecification) GetModuleRegistryUrls() []string {
	if x != nil {
		return x.ModuleRegistryUrls
	}
	return nil
}

func (x *BuildSpecification) GetIgnoreRootModuleDevDependencies() bool {
	if x != nil {
		return x.IgnoreRootModuleDevDependencies
	}
	return false
}

func (x *BuildSpecification) GetBuiltinsModuleNames() []string {
	if x != nil {
		return x.BuiltinsModuleNames
	}
	return nil
}

func (x *BuildSpecification) GetRepoPlatform() string {
	if x != nil {
		return x.RepoPlatform
	}
	return ""
}

func (x *BuildSpecification) GetCommandEncoders() []*encoding.BinaryEncoder {
	if x != nil {
		return x.CommandEncoders
	}
	return nil
}

type Action struct {
	state                       protoimpl.MessageState    `protogen:"open.v1"`
	InvocationId                string                    `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	BuildRequestId              string                    `protobuf:"bytes,2,opt,name=build_request_id,json=buildRequestId,proto3" json:"build_request_id,omitempty"`
	Namespace                   *object.Namespace         `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	BuildSpecificationReference []byte                    `protobuf:"bytes,4,opt,name=build_specification_reference,json=buildSpecificationReference,proto3" json:"build_specification_reference,omitempty"`
	BuildSpecificationEncoders  []*encoding.BinaryEncoder `protobuf:"bytes,5,rep,name=build_specification_encoders,json=buildSpecificationEncoders,proto3" json:"build_specification_encoders,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_build_build_proto_rawDescGZIP(), []int{3}
}

func (x *Action) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *Action) GetBuildRequestId() string {
	if x != nil {
		return x.BuildRequestId
	}
	return ""
}

func (x *Action) GetNamespace() *object.Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *Action) GetBuildSpecificationReference() []byte {
	if x != nil {
		return x.BuildSpecificationReference
	}
	return nil
}

func (x *Action) GetBuildSpecificationEncoders() []*encoding.BinaryEncoder {
	if x != nil {
		return x.BuildSpecificationEncoders
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *status.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_build_build_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_build_build_proto_rawDescGZIP(), []int{4}
}

func (x *Result) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_pkg_proto_model_build_build_proto protoreflect.FileDescriptor

var file_pkg_proto_model_build_build_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x27, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84,
	0x01, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x66, 0x0a,
	0x18, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x16, 0x72,
	0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x74, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x6b,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x16, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf5, 0x05, 0x0a, 0x12,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x6f, 0x6f,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x12, 0x79, 0x0a, 0x1d,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x1b, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x6a, 0x0a, 0x18, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x6f, 0x6e, 0x61,
	0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x16, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x43, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x6e, 0x61,
	0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x55, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x23, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x64, 0x65, 0x76, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x76, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x75, 0x69, 0x6c,
	0x74, 0x69, 0x6e, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e,
	0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x70, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f,
	0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x72, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x72, 0x73, 0x22, 0xc5, 0x02, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x42,
	0x0a, 0x1d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x67, 0x0a, 0x1c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e,
	0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x52,
	0x1a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2f, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a,
	0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_proto_model_build_build_proto_rawDescOnce sync.Once
	file_pkg_proto_model_build_build_proto_rawDescData []byte
)

func file_pkg_proto_model_build_build_proto_rawDescGZIP() []byte {
	file_pkg_proto_model_build_build_proto_rawDescOnce.Do(func() {
		file_pkg_proto_model_build_build_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_model_build_build_proto_rawDesc), len(file_pkg_proto_model_build_build_proto_rawDesc)))
	})
	return file_pkg_proto_model_build_build_proto_rawDescData
}

var file_pkg_proto_model_build_build_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_proto_model_build_build_proto_goTypes = []any{
	(*Module)(nil),                                 // 0: bonanza.model.build.Module
	(*UseLockfile)(nil),                            // 1: bonanza.model.build.UseLockfile
	(*BuildSpecification)(nil),                     // 2: bonanza.model.build.BuildSpecification
	(*Action)(nil),                                 // 3: bonanza.model.build.Action
	(*Result)(nil),                                 // 4: bonanza.model.build.Result
	(*filesystem.DirectoryReference)(nil),          // 5: bonanza.model.filesystem.DirectoryReference
	(*durationpb.Duration)(nil),                    // 6: google.protobuf.Duration
	(*filesystem.DirectoryCreationParameters)(nil), // 7: bonanza.model.filesystem.DirectoryCreationParameters
	(*filesystem.FileCreationParameters)(nil),      // 8: bonanza.model.filesystem.FileCreationParameters
	(*encoding.BinaryEncoder)(nil),                 // 9: bonanza.model.encoding.BinaryEncoder
	(*object.Namespace)(nil),                       // 10: bonanza.storage.object.Namespace
	(*status.Status)(nil),                          // 11: google.rpc.Status
}
var file_pkg_proto_model_build_build_proto_depIdxs = []int32{
	5,  // 0: bonanza.model.build.Module.root_directory_reference:type_name -> bonanza.model.filesystem.DirectoryReference
	6,  // 1: bonanza.model.build.UseLockfile.maximum_cache_duration:type_name -> google.protobuf.Duration
	0,  // 2: bonanza.model.build.BuildSpecification.modules:type_name -> bonanza.model.build.Module
	7,  // 3: bonanza.model.build.BuildSpecification.directory_creation_parameters:type_name -> bonanza.model.filesystem.DirectoryCreationParameters
	8,  // 4: bonanza.model.build.BuildSpecification.file_creation_parameters:type_name -> bonanza.model.filesystem.FileCreationParameters
	1,  // 5: bonanza.model.build.BuildSpecification.use_lockfile:type_name -> bonanza.model.build.UseLockfile
	9,  // 6: bonanza.model.build.BuildSpecification.command_encoders:type_name -> bonanza.model.encoding.BinaryEncoder
	10, // 7: bonanza.model.build.Action.namespace:type_name -> bonanza.storage.object.Namespace
	9,  // 8: bonanza.model.build.Action.build_specification_encoders:type_name -> bonanza.model.encoding.BinaryEncoder
	11, // 9: bonanza.model.build.Result.status:type_name -> google.rpc.Status
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pkg_proto_model_build_build_proto_init() }
func file_pkg_proto_model_build_build_proto_init() {
	if File_pkg_proto_model_build_build_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_model_build_build_proto_rawDesc), len(file_pkg_proto_model_build_build_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_model_build_build_proto_goTypes,
		DependencyIndexes: file_pkg_proto_model_build_build_proto_depIdxs,
		MessageInfos:      file_pkg_proto_model_build_build_proto_msgTypes,
	}.Build()
	File_pkg_proto_model_build_build_proto = out.File
	file_pkg_proto_model_build_build_proto_goTypes = nil
	file_pkg_proto_model_build_build_proto_depIdxs = nil
}
